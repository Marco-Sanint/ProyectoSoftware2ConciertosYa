import React, { useState } from "react"; 
import { BrowserRouter as Router, Route, Routes, Navigate } from "react-router-dom";
import Login from "./components/Login";
import Home from "./components/Home";
import SeatSelection from "./components/SeatSelection";
import Profile from "./components/Profile";  
import Register from "./components/Register";
import CrearEvento from "./components/CrearEvento";
import CrearArtista from "./components/CrearArtista";
import Checkout from "./components/Checkout/Checkout";
import CrearLugares from "./components/Crearlugares";
import "slick-carousel/slick/slick.css"; 
import "slick-carousel/slick/slick-theme.css";

function App() {
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  return (
    <Router>
      <Routes>
        {/* Ruta de inicio (Home) */}
        <Route path="/" element={<Home />} />

        {/* Ruta de inicio de sesión (Login) */}
        <Route 
          path="/login" 
          element={<Login setIsAuthenticated={setIsAuthenticated} />} 
        />

        {/* Ruta de registro (Register) */}
        <Route 
          path="/register" 
          element={isAuthenticated ? <Navigate to="/" /> : <Register />} 
        />

        {/* Ruta de perfil (Profile), solo accesible si está autenticado */}
        <Route 
          path="/profile" 
          element={isAuthenticated ? <Profile /> : <Navigate to="/login" />} 
        />

        {/* Ruta de selección de asientos (SeatSelection), solo accesible si está autenticado */}
        <Route 
          path="/seats" 
          element={isAuthenticated ? <SeatSelection /> : <Navigate to="/login" />} 
        />

        {/* Ruta para crear un evento, solo accesible si está autenticado */}
        <Route 
          path="/nuevoevento" 
          element={isAuthenticated ? <CrearEvento /> : <Navigate to="/login" />} 
        />

        {/* Ruta para crear un artista, solo accesible si está autenticado */}
        <Route 
          path="/nuevoartista" 
          element={isAuthenticated ? <CrearArtista /> : <Navigate to="/login" />} 
        />

        {/* Ruta de checkout (Checkout), solo accesible si está autenticado */}
        <Route 
          path="/checkout" 
          element={isAuthenticated ? <Checkout /> : <Navigate to="/login" />} 
        />

        {/* Ruta para crear lugares, solo accesible si está autenticado */}
        <Route 
          path="/crearlugares" 
          element={isAuthenticated ? <CrearLugares /> : <Navigate to="/login" />} 
        />
      </Routes>
    </Router>
  );
}

export default App;
